<!DOCTYPE html>
<html lang="en">
    <head>
        <title>
            {% block title %}{{copy.siteName}}
            {% endblock %}
        </title>
        <meta charset="UTF-8"/>
        {% if description %}
            <meta name="description" content="{{description}}"/>
        {% endif %}

        <meta property="og:title" content="Welcome to {{copy.websiteTitle}}"/>
        <meta property="og:url" content="https://stephenbarkan.com/"/>
        <meta property="og:image" content="https://stephenbarkan.com/images/share-image.png"/>
        <meta property="og:type" content="website"/>
        <meta property="og:description" content="The personal website and design portfolio of Stephen Barkan"/>
        <meta name="twitter:card" value="summary_large_image">
        <meta name="twitter:image" content="https://stephenbarkan.com/images/share-image.png">

        <meta http-equiv="x-ua-compatible" content="ie=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover"/>
        <link rel="stylesheet" href="https://use.typekit.net/bpn0sjs.css">

        {# include main.css if in development mode #}
        {% if helpers.environment === 'development' %}
            <link rel="stylesheet" href="/style.css">
        {% else %}
            <link rel="stylesheet" href="./style.css">
        {% endif %}
        {% block head %}{% endblock %}
    </head >
    <body data-active-applet="posts" class="h-screen overflow-hidden bg-scroll">
        <div id="app"
        x-data="{
            activeApplet: 'posts',
            z: 2,
            appState: '',
            theme: 'light',
            previewAppletOpen: false,
            previewAppletDetails: {
                title: '',
                externalLink: '',
                content: ''
            },
            openPreviewApplet (title, externalLink, content) {
                this.previewAppletOpen = true
                this.previewAppletDetails = {title, externalLink, content}
            },
            setAppState(state) {
                this.appState = state
            },
            allApplets: document.querySelectorAll('[data-is-applet]'),
            getUrlParam(param) {
                let value;
                const queries = window.location.search.substring(1).split('&');
                queries.forEach(function(query) {
                    const pair = query.split('=');
                    if(pair[0] == param) {
                        value = pair[1];
                    }
                })
                return value;
            },
            setLoginState() {
                `{{helpers.environment }}` !== `development` && setTimeout(() => {this.setAppState('loggedIn')}, 1500)
            },
            getInitActiveApplet() {
                if (this.getUrlParam('activeApplet')) {
                    this.activeApplet = this.getUrlParam('activeApplet');
                }
            },
            setActiveApplet(applet) {
                this.activeApplet = applet;
                this.z++;
                this.allApplets.forEach(el => {
                    el.classList.remove('applet-animate')
                    if (el.dataset.applet === applet) {
                    el.style.zIndex = this.z
                    if (this.z > 3) {
                        el.classList.add('applet-animate')
                    }
                    }
                });
                history.replaceState({}, '', `?activeApplet=${applet}`);
                this.setFavicons(applet)
            },
            setFavicons(favImg) {
                let headTitle = document.querySelector('head');
                const existingFavicons = headTitle.querySelectorAll(`link[rel='shortcut icon']`)
                existingFavicons.forEach(el => el.remove())
                let setFavicon = document.createElement('link');
                setFavicon.setAttribute('rel', 'shortcut icon');
                setFavicon.setAttribute('href', `./favicons/favicon-${favImg}.png`);
                headTitle.appendChild(setFavicon);
                },
            click(src) {
                const sound = new Howl({
                    src: [`../sounds/${src}`],
                    html5: true
                });
                 sound.once('load',() => {
                    sound.play();
                });
            },
        }"
        x-init="setAppState(`{{helpers.environment}}` === `development` ?  `loggedIn` :  `startUp`),
        setLoginState(),
        getInitActiveApplet(),
        setActiveApplet(activeApplet)"
        @mousedown="click('click.wav')"
        class="w-full h-screen overflow-hidden">
            <main
                :data-active-applet="activeApplet"
                :data-applet="activeApplet"
                class="grid w-full h-screen grid-rows-site text-base antialiased transition-shadow duration-[2000ms] bg-ui-wallpaper text-display-primary shadow-body easing-linear bg-dot-pattern-light dark:bg-dot-pattern-dark" x-cloak>
                <div class="z-[1000] flex-shrink-0 hidden sm:block">
                    {% include "components/topbar.njk" %}
                </div>
                {% block content %}
                    {{ content | safe }}
                {% endblock %}
                <div class="bottom-0 z-[1000] flex-shrink-0 row-start-3 lg:hidden page-container">
                    {% include "components/appletIconFooter.njk" %}
                </div>
                {% include "components/signInScreen.njk" %}
            </main>
        </div>
        <script
  defer
  src="https://unpkg.com/alpinejs-cursor@latest/dist/cursor.min.js"
></script>
        <script defer src="https://unpkg.com/alpinejs@3.5.0/dist/cdn.min.js"></script>
        <script defer src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.1.2/howler.min.js"></script>
        <script src="/../scripts/clock.js"></script>
    </body>
</html>
